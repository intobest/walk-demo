apply plugin: "org.springframework.boot"
apply plugin: "eclipse"

//编译器选项
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"

//工程相关配置
ext {
	build = "build"
	webapp = "src/main/webapp"
	classes = "$webapp/WEB-INF/classes"
	releasepath = "../release"
}

//发布版本号
version = "$release_version"

//spring boot插件
buildscript {
	repositories {
		//私服设置
		maven {url "$repoUrl"}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
	}
}

//maven远程仓库
repositories {
	
	//私服设置
	maven {url "$repoUrl"}
}

//依赖管理
dependencies {
	compile("org.springframework.cloud:spring-cloud-starter-alibaba-nacos-config:${alibaba_nacos_version}")
	compile("org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:${alibaba_nacos_version}")
	compile("org.springframework.cloud:spring-cloud-commons:${spring_cloud_commons_version}")
	compile("org.springframework.cloud:spring-cloud-starter-zuul")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.retry:spring-retry")
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}"
	}
}

//清理目录
task cleanfiles << {
	println project.name + " cleanfiles..."
	
	delete "bin"
	delete "logs"
	delete ".settings"
}

//复制相关文件
task copyfiles << {
	println project.name + " copyfiles..."
}

//发布jar包
task release << {
	println project.name + " release..."
	
	//复制war文件到发布目录
	copy {
		from "$build/libs"
		into "$releasepath"
		include "*.jar"
	}
}